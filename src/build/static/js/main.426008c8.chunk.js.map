{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/NotFoundPage.js","pages/ArticlePage.js","pages/ArticleListPage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","articles","name","title","content","ArticlesList","map","article","key","to","substring","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","NotFoundPage","ArticlePage","match","params","upvote","articleInfo","useEffect","console","log","fetchData","ArticleContent","find","otherArticle","filter","paragraph","ArticleListPage","articleContent","NavBar","App","className","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.426008c8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst HomePage = () => (\n  <>\n    <h1>Home Page</h1>\n  </>\n);\n\nexport default HomePage;\n","import React from \"react\";\n\nconst AboutPage = () => (\n  <>\n    <h1>About Page</h1>\n  </>\n);\n\nexport default AboutPage;\n"," const articles = [\n\t{\n\t\tname: \"learn-react\",\n\t\ttitle:\" The Fastest way to learn React\",\n\t\tcontent: [\"Get to here!!!\"]\n\t},\n\t{\n\t\tname: \"learn-node\",\n\t\ttitle:\" How to Build a Node Server in 10 Minutes\",\n\t\tcontent: [\"Get to here!!!\"]\n\t},\n\t{\n\t\tname: \"learn-resumes\",\n\t\ttitle:\" My Thoughts on Resume\",\n\t\tcontent: [\"Get to here!!!\"]\n\t}\n];\n\nexport default articles;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst ArticlesList = ({articles}) => (\n\t<>\n    {articles.map((article, key) => (\n      <Link key={key} to={'/articles/'+article.name}>\n\t\t\t\t<h3>{article.title}</h3>\n\t\t\t\t<p>{article.content[0].substring(0,3)}... </p>\n      </Link>\n    ))}\n  </>\n);\n\nexport default ArticlesList;\n","import React from \"react\";\n\nconst CommentsList = ({ comments }) => (\n  <>\n    <h3>Comments</h3>\n    {comments.map((comment, key) => (\n      <div key={key}>\n        <h4>{comment.username}</h4>\n        <p>{comment.text}</p>\n      </div>\n    ))}\n  </>\n);\n\nexport default CommentsList;\n","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return (\n        <div id=\"upvotes-section\">\n            <button onClick={() => upvoteArticle()}>Add Upvote</button>\n            <p>This post has been upvoted {upvotes} times</p>\n        </div>\n    );\n}\n\nexport default UpvotesSection;\n","import React, { useState } from 'react';\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({ username, text: commentText }),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n\n    return (\n        <div id=\"add-comment-form\">\n            <h3>Add a Comment</h3>\n            <label>\n                Name:\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n            </label>\n            <label>\n                Comment:\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\n            </label>\n            <button onClick={() => addComment()}>Add Comment</button>\n        </div>\n    );\n}\n\nexport default AddCommentForm;","import React from \"react\";\n\nconst NotFoundPage = () => (\n  <>\n    <h1>404: Page not found</h1>\n  </>\n);\n\nexport default NotFoundPage;\n","import React, { useState, useEffect } from \"react\";\nimport ArticleContent from \"./article-content\";\nimport ArticleList from \"../components/ArticlesList\";\nimport CommentsList from \"../components/CommentsList\";\nimport Upvotes from \"../components/UpvotesSection\";\nimport AddCommentForm from \"../components/AddCommentForm\";\nimport NotFoundPage from \"./NotFoundPage\";\nconst ArticlePage = ({ match }) => {\n  var name = match.params.name;\n  const [articleInfo, setArticleInfo] = useState({ upvote: 0, comments: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      console.log(body);\n      setArticleInfo(body);\n    };\n    fetchData();\n  }, [name]);\n\n  const article = ArticleContent.find(article => article.name === name);\n  if (!article) return <NotFoundPage />;\n  const otherArticle = ArticleContent.filter(article => article.name !== name);\n  return (\n    <>\n\t\t\t<h1>{article.title}</h1>\n      <Upvotes\n        articleName={name}\n        upvotes={articleInfo.upvotes}\n        setArticleInfo={setArticleInfo}\n      />\n      {article.content.map((paragraph, key) => (\n        <p key={key}>{paragraph}</p>\n      ))}\n\t\t\t<CommentsList comments={articleInfo.comments} />\n\t\t\t<AddCommentForm articleName={name} setArticleInfo={setArticleInfo}/>\n      <h3>Other Articles</h3>\n      <ArticleList articles={otherArticle} />\n    </>\n  );\n};\n\nexport default ArticlePage;\n","import React from \"react\";\nimport articleContent from \"./article-content\";\nimport ArticleList from \"../components/ArticlesList\";\nconst ArticleListPage = () => (\n  <>\n\t\t<h1>Article Page</h1>\n\t\t<ArticleList articles={articleContent}/>\n  </>\n);\n\nexport default ArticleListPage;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nconst NavBar = () => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/about\">About</Link>\n      </li>\n      <li>\n        <Link to=\"/articles-list\">Articles</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport ArticlePage from \"./pages/ArticlePage\";\nimport ArticleListPage from \"./pages/ArticleListPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport NavBar from \"./NavBar\";\nfunction App() {\n  return (\n    <Router>\n\t\t\t<div className=\"App\">\n\t\t\t<NavBar/>\n\t\t\t\t<div id=\"page-body\">\n\t\t\t\t<Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/about\" component={AboutPage} />\n\t\t\t\t\t<Route path=\"/articles-list\" component={ArticleListPage} />\n\t\t\t\t\t<Route path=\"/articles/:name\" component={ArticlePage} />\n\t\t\t\t\t<Route component={NotFoundPage}/>\n\t\t\t\t\t</Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}